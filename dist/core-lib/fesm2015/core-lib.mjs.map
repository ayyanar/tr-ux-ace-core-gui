{"version":3,"file":"core-lib.mjs","sources":["../../../src/lib/services/user.ts","../../../src/lib/services/message.ts","../../../src/lib/services/message.service.ts","../../../src/lib/components/dxc-confirm-dialog/dxc-confirm-dialog.component.ts","../../../src/lib/components/dxc-confirm-dialog/dxc-confirm-dialog.component.html","../../../src/lib/services/dialog.service.ts","../../../src/lib/services/ace-overlay-container.ts","../../../src/lib/components/dxc-alert-message/dxc-alert-message.component.ts","../../../src/lib/components/dxc-alert-message/dxc-alert-message.component.html","../../../src/lib/components/dxc-app-layout/dxc-app-layout.component.ts","../../../src/lib/components/dxc-app-layout/dxc-app-layout.component.html","../../../src/lib/components/dxc-app-layout/dxc-app-center-content.component.html","../../../src/lib/components/dxc-header/dxc-header.component.ts","../../../src/lib/components/dxc-header/dxc-header.component.html","../../../src/lib/components/dxc-session/dxc-session.component.ts","../../../src/lib/components/dxc-session/dxc-session.component.html","../../../src/lib/components/dxc-navigation/dxc-navigation.component.ts","../../../src/lib/components/dxc-navigation/dxc-navigation.component.html","../../../src/lib/components/dxc-class-selector/dxc-class-selector.component.ts","../../../src/lib/components/dxc-class-selector/dxc-class-selector.component.html","../../../src/lib/components/dxc-tab-nav-bar/dxc-tab-nav-bar.component.ts","../../../src/lib/components/dxc-tab-nav-bar/dxc-tab-nav-bar.component.html","../../../src/lib/material.module.ts","../../../src/lib/angular.module.ts","../../../src/lib/components/observable.pipe.ts","../../../src/lib/directives/regex-validator-directive.ts","../../../src/lib/components/custom-fields/dxc-chips/dxc-chips.component.ts","../../../src/lib/components/custom-fields/dxc-chips/dxc-chips.component.html","../../../src/lib/components/custom-fields/dxc-chip-autocomplete/dxc-chip-autocomplete.component.ts","../../../src/lib/components/custom-fields/dxc-chip-autocomplete/dxc-chip-autocomplete.component.html","../../../src/lib/components/custom-fields/dxc-chip-autocomplete/dxc-chip-error.component.ts","../../../src/lib/components/custom-fields/dxc-chip-autocomplete/dxc-chip-error.component.html","../../../src/lib/directives/validation-formatter.directive.ts","../../../src/lib/dxc-core.module.ts","../../../src/lib/public-api.ts","../../../src/lib/core-lib.ts"],"sourcesContent":["/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nexport class User {\n  constructor(public userId: number, public username: string,\n              public password: string, public role: string) {}\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nexport class Message {\n    public type: MessageType;\n    public message: string;\n}\n\nexport enum MessageType {\n    Success,\n    Error,\n    Info,\n    Warning\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { Message, MessageType } from './message';\n\n@Injectable()\nexport class MessageService {\n    private subject = new Subject<Message>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert messages\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    public getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    public success(message: string, keepAfterRouteChange = false) {\n        this.alert(MessageType.Success, message, keepAfterRouteChange);\n    }\n\n    public error(message: string, keepAfterRouteChange = false) {\n        this.alert(MessageType.Error, message, keepAfterRouteChange);\n    }\n\n    public info(message: string, keepAfterRouteChange = false) {\n        this.alert(MessageType.Info, message, keepAfterRouteChange);\n    }\n\n    public warn(message: string, keepAfterRouteChange = false) {\n        this.alert(MessageType.Warning, message, keepAfterRouteChange);\n    }\n\n    public clear() {\n        // clear alerts\n       this.subject.next(null); \n    }\n\n    private alert(pType: MessageType, pMessage: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: pType, message: pMessage } as Message);\n    }\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './dxc-confirm-dialog.component.html',\n  styleUrls: ['./dxc-confirm-dialog.component.scss']\n})\nexport class DxcConfirmDialogComponent {\n    public title: string;\n    public message: string;\n\n    constructor(public dialogRef: MatDialogRef<DxcConfirmDialogComponent>) {}\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<h1 mat-dialog-title>{{ title }}</h1>\n<p>{{ message }}</p>\n\n<button type=\"button\" mat-raised-button color=\"primary\"\n    (click)=\"dialogRef.close(true)\">OK</button>\n<button type=\"button\" mat-button \n    (click)=\"dialogRef.close()\">Cancel</button>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DxcConfirmDialogComponent } from '../components/dxc-confirm-dialog/dxc-confirm-dialog.component';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\n\n@Injectable()\nexport class DialogsService {\n\n    constructor(private dialog: MatDialog) { }\n\n    public confirm(title: string, message: string): Observable<boolean> {\n\n        let dialogRef: MatDialogRef<DxcConfirmDialogComponent>;\n\n        dialogRef = this.dialog.open(DxcConfirmDialogComponent);\n\n        dialogRef.componentInstance.title = title;\n        dialogRef.componentInstance.message = message;\n\n        return dialogRef.afterClosed();\n    }\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\n@Injectable()\nexport class AceOverlayContainer extends OverlayContainer {\n\n  \n  public override _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('cdk-overlay-container');\n\n    document.querySelector('.ace-app-container').appendChild(container);\n    this._containerElement = container;\n  }\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, OnInit, ViewChild, ViewContainerRef, HostBinding } from '@angular/core';\n\nimport { MessageService } from '../../services/message.service';\nimport { Message, MessageType } from '../../services/message';\nimport { Overlay, CdkOverlayOrigin, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal, CdkPortal } from '@angular/cdk/portal';\n\n@Component({\n    selector: 'dxc-alert-message',\n    templateUrl: 'dxc-alert-message.component.html',\n    styleUrls: ['dxc-alert-message.component.scss'],\n})\n\nexport class DxcAlertMessageComponent implements OnInit {\n    public messages: Message[] = [];\n    @ViewChild('messageOrigin') public messageOrigin: CdkOverlayOrigin;\n    @ViewChild('messageTemplate') public messageTemplate: CdkPortal;\n\n    @HostBinding('style.background-color') public backColor = '#FFF';\n\n    constructor(private messageService: MessageService, public overlay: Overlay, public viewContainerRef: ViewContainerRef) {\n        this.messageService.getMessage().subscribe((alert: Message) => {\n            if (!alert) {\n                // clear alerts when an empty alert is received\n                this.messages = [];\n                return;\n            }\n\n            // add alert to array\n            this.messages.push(alert);\n            // console.log(this.messages)\n        });\n     }\n\n    public ngOnInit() {\n        // no code\n    }\n\n    public showAllMessages() {\n      /*  const strategy = this.overlay.position()\n        .connectedTo(\n            this.messageOrigin.elementRef,\n            {originX: 'start', originY: 'bottom'},\n            {overlayX: 'start', overlayY: 'top'} ); */\n\n     const strategy = this.overlay.position()\n      .flexibleConnectedTo(this.messageOrigin.elementRef)\n      .withPositions([{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n      }]);\n\n        const config = new OverlayConfig({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: strategy\n        });\n        const overlayRef = this.overlay.create(config);\n\n        overlayRef.attach(this.messageTemplate);\n        overlayRef.backdropClick().subscribe(() => overlayRef.detach());\n    }\n\n    public removeAlert(alert: Message) {\n        this.messageService.clear();\n    }\n\n    public cssClass(alert: Message) {\n        if (!alert) {\n            return;\n        }\n\n        // return css class based on alert type\n        switch (alert.type) {\n            case MessageType.Success:\n                return 'alert alert-success';\n            case MessageType.Error:\n                return 'alert alert-danger';\n            case MessageType.Info:\n                return 'alert alert-info';\n            case MessageType.Warning:\n                return 'alert alert-warning';\n            default:\n        }\n    }\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<div *ngIf=\"messages.length > 0\" class=\"{{ cssClass(messages[0]) }} alert-dismissable\">\n    <mat-icon role=\"button\" (click)=\"removeAlert(messages[0])\" class=\"alert-close\">close</mat-icon>\n    <ng-container [ngSwitch]=\"messages[0].type\">\n        <mat-icon *ngSwitchCase=\"0\">check_circle</mat-icon>\n        <mat-icon *ngSwitchCase=\"1\">error</mat-icon>\n        <mat-icon *ngSwitchCase=\"2\">info</mat-icon>\n        <mat-icon *ngSwitchCase=\"3\">warning</mat-icon>\n        <mat-icon *ngSwitchDefault>notifications</mat-icon>\n    </ng-container>\n    <span class=\"alert-text\" cdk-overlay-origin #messageOrigin=\"cdkOverlayOrigin\" (click)=\"showAllMessages()\">{{messages[0].message}}</span>\n    <div *ngIf=\"messages.length > 1\" class=\"alert-count\" (click)=\"showAllMessages()\">{{messages.length}}</div>\n</div>\n<ng-template cdk-portal #messageTemplate=\"cdkPortal\">\n    <ul class=\"alert-popup mat-elevation-z6\">\n        <li *ngFor=\"let msg of messages\" class=\"{{ cssClass(msg) }}\">\n            <ng-container [ngSwitch]=\"msg.type\">\n                <mat-icon *ngSwitchCase=\"0\">check_circle</mat-icon>\n                <mat-icon *ngSwitchCase=\"1\">error</mat-icon>\n                <mat-icon *ngSwitchCase=\"2\">info</mat-icon>\n                <mat-icon *ngSwitchCase=\"3\">warning</mat-icon>\n                <mat-icon *ngSwitchDefault>notifications</mat-icon>\n            </ng-container>\n\n            <span class=\"alert-text\">{{msg.message}}</span>\n        </li>\n    </ul>\n</ng-template>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input, HostBinding, ViewChild, ElementRef } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'dxc-app-layout',\n  templateUrl: './dxc-app-layout.component.html',\n  styleUrls: ['./dxc-app-layout.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcAppLayoutComponent implements OnInit {\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-content',\n  template: `\n    <div class=\"dxc-app-main\">\n    <ng-content select=\"dxc-app-top-content\"></ng-content>\n    <dxc-alert-message></dxc-alert-message>\n    <div class=\"dxc-app-body-content\">\n      <ng-content select=\"dxc-app-left-content\"></ng-content>\n      <ng-content select=\"dxc-app-center-content\"></ng-content>\n      <ng-content select=\"dxc-app-right-content\"></ng-content>\n    </div>\n  </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcAppContentComponent implements OnInit {\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-app-top-content',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcAppTopContentComponent implements OnInit {\n  @Input() public height: string = '50px';\n\n  @HostBinding('style.height') get topHeight(): string{\n    return this.height;\n  }\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-app-left-content',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcAppLeftContentComponent implements OnInit {\n  @Input() public width: string = '200px';\n\n  @HostBinding('style.min-width') get minWidth(): string {\n    return this.width;\n  }\n  @HostBinding('style.max-width') get maxWidth(): string {\n    return this.width;\n  }\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-app-right-content',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcAppRightContentComponent implements OnInit {\n  @Input() public width: string = '200px';\n\n  @HostBinding('style.min-width') get minWidth(): string {\n    return this.width;\n  }\n  @HostBinding('style.max-width') get maxWidth(): string {\n    return this.width;\n  }\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-app-center-content',\n  templateUrl: './dxc-app-center-content.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcAppCenterContentComponent implements OnInit {\n\n  @Input('fixedtop') public fixedTop = false;\n  @ViewChild('scrollwindow') public scrollWindow: ElementRef;\n  @ViewChild('contentviewer') public contentViewer: ElementRef;\n\n  constructor(private router: Router) {\n    // to-do\n  }\n\n  public ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      try {\n        this.scrollWindow.nativeElement.scrollTo(0, 0);\n        this.contentViewer.nativeElement.scrollTo(0, 0);\n      } catch (e) {\n        // no code\n      }\n    });\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-fixed-top-content',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcFixedTopContentComponent implements OnInit {\n\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<ng-content select=\"dxc-header\"></ng-content>\n<!-- <dxc-alert-message></dxc-alert-message> -->\n<ng-content></ng-content>","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<div class=\"dxc-app-container\">\n    <div class=\"dxc-app-content\">\n            <div class=\"dxc-app-content-viewer mat-typography mat-elevation-z2\">\n                    <ng-content></ng-content>\n            </div>\n        <!-- <div class=\"dxc-app-content-viewer mat-typography mat-elevation-z2\" [style.overflow]=\"fixedTop ? 'hidden':'auto'\" [style.padding]=\"fixedTop ? '0':''\"\n            [style.height]=\"fixedTop ? '100%':''\" #contentviewer>\n            <div fxLayout=\"column\" fxLayoutAlign=\" none\" class=\"dxc-scroll-container\">\n                <div fxFlex=\"initial\" [class.dxc-fixed-header-container]=\"fixedTop\" [class.dxc-scroll-header-container]=\"!fixedTop\">\n                    <ng-content select=\"dxc-fixed-top-content\"></ng-content>\n                </div>\n                <div fxFlex=\"auto\" class=\"dxc-scroll-content-container\" #scrollwindow>\n                    <div class=\"dxc-scroll-content-wrapper\">\n                        <ng-content></ng-content>\n                    </div>\n                </div>\n            </div>\n        </div> -->\n    </div>\n</div>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'dxc-header',\n  templateUrl: './dxc-header.component.html',\n  styleUrls: ['./dxc-header.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcHeaderComponent implements OnInit {\n  @Input() public title: string = 'Application Title';\n  @Output() public onLogoClick = new EventEmitter();\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n  public logoClick() {\n    this.onLogoClick.emit();\n  }\n\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<mat-toolbar color=\"primary\" class=\"dxc-app-toolbar\">\n  <!-- <mat-toolbar-row> -->\n    <div class=\"icn-logo\" (click)=\"logoClick()\"></div>\n    <span>{{title}}</span>\n    <span class=\"app-menu-spacer\"></span>\n    <ng-content select=\"[mat-button],[mat-icon-button],mat-menu\"></ng-content>\n  <!-- </mat-toolbar-row> -->\n</mat-toolbar>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-session',\n  templateUrl: './dxc-session.component.html',\n  styleUrls: ['./dxc-session.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcSessionComponent implements OnInit {\n  @Input('session-title') public sessionTitle: string = 'Session Title';\n  @Input('show-header')  public showHeader: boolean = true;\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-session-controls',\n  template: `\n    <ng-content select=\"[mat-button],[mat-icon-button],mat-menu\"></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcSessionControlsComponent implements OnInit {\n  public ngOnInit() {\n    // to-do\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\n@Component({\n  selector: 'dxc-session-content',\n  template: `\n    <ng-content></ng-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcSessionContentComponent implements OnInit {\n  public ngOnInit() {\n    // to-do\n  }\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<div *ngIf=\"showHeader==true\" class=\"dxc-session-header\">\n  <span class=\"dxc-session-title\">{{sessionTitle}}</span>\n  <span class=\"dxc-session-header-spacer\"></span>\n  <ng-content select=\"dxc-session-controls\"></ng-content>\n</div>\n<div class=\"dxc-session-content\">\n  <ng-content select=\"dxc-session-content\"></ng-content>\n</div>\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\nimport { DxcNav } from '../../models/dxc-nav-item.interface';\n\n@Component({\n  selector: 'dxc-nav',\n  templateUrl: './dxc-navigation.component.html',\n  styleUrls: ['./dxc-navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcNavigationComponent implements OnInit {\n  @Input('nav-items')\n  public navItems: DxcNav[] = [];\n\n  @Input('active-item')\n  public activeItem: number = 0;\n\n  // tslint:disable-next-line:no-output-rename\n  @Output('itemclick')\n  public onItemClick = new EventEmitter();\n\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n  public changeActiveItem(index: number) {\n    this.activeItem = index;\n    this.onItemClick.emit({value: index});\n  }\n\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<!-- <ul class=\"nav-container\">\n  <li class=\"nav-item\" *ngFor=\"let item of navItems;let i = index\" [class.active]=\"i==activeItem\">\n    <a class=\"nav-link\" [routerLink]=\"item.Link\" (click)=\"changeActiveItem(i)\" >\n      {{item.Name}}\n    </a>\n  </li>\n</ul> -->\n<nav class=\"nav\">\n  <!-- <a class=\"nav-link\" *ngFor=\"let item of navItems;let i = index\" [routerLink]=\"item.Link\" (click)=\"changeActiveItem(i)\" [class.active]=\"i==activeItem\"> -->\n  <a class=\"nav-link\" *ngFor=\"let item of navItems;let i = index\" [routerLink]=\"item.Link\"  routerLinkActive=\"active\">\n    {{item.Name}}\n  </a>\n</nav>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'dxc-class-selector',\n  templateUrl: './dxc-class-selector.component.html',\n  styleUrls: ['./dxc-class-selector.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DxcClassSelectorComponent implements OnInit {\n  constructor() {\n    // to-do\n  }\n\n  public ngOnInit() {\n    // to-do\n  }\n\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<ng-content select=\"mat-button-toggle-group\"></ng-content>\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, ElementRef, ViewChild, DoCheck, AfterViewInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'dxc-tab-nav-bar',\n  templateUrl: 'dxc-tab-nav-bar.component.html',\n  styleUrls: ['dxc-tab-nav-bar.component.scss'],\n})\nexport class DxcTabNavBarComponent implements DoCheck, AfterViewInit {\n\n    @ViewChild('labelContainer') public labelContainer: ElementRef;\n    public showScrollButtons = true;\n\n    constructor(\n        private el: ElementRef,\n    ) {\n    }\n\n    public ngAfterViewInit() {\n        this.labelContainer.nativeElement.querySelector('.mat-tab-links').style.display = 'flex';\n    }\n\n    public ngDoCheck() {\n        if (this.labelContainer) {\n            if (\n                this.labelContainer.nativeElement.clientWidth -\n                this.labelContainer.nativeElement.firstElementChild.clientWidth\n                > 0\n            ) {\n                this.showScrollButtons = false;\n            } else {\n                this.showScrollButtons = true;\n            }\n        }\n\n    }\n\n    public left() {\n        const el = (this.el.nativeElement as HTMLElement).querySelector('.mat-tab-label-container');\n        console.log(el.clientWidth);\n        el.scrollLeft -= el.clientWidth;\n    }\n\n    public right() {\n        const el = this.el.nativeElement.querySelector('.mat-tab-label-container');\n        el.scrollLeft += el.clientWidth;\n    }\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<div class=\"mat-tab-nav-bar-pagination\">\n    <div *ngIf=\"showScrollButtons\" (click)=\"left()\" aria-hidden=\"true\" class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-ripple\"\n        mat-ripple=\"\">\n        <div class=\"mat-tab-header-pagination-chevron\"></div>\n    </div>\n    <div class=\"mat-tab-label-container\" #labelContainer>\n        <ng-content></ng-content>\n        <div class=\"mat-tab-nav-bar mat-tab-header\" style=\"flex-grow: 1\"></div>\n    </div>\n    <div *ngIf=\"showScrollButtons\" (click)=\"right()\" aria-hidden=\"true\" class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-ripple\"\n        mat-ripple=\"\">\n        <div class=\"mat-tab-header-pagination-chevron\"></div>\n    </div>\n</div>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {ErrorStateMatcher, MatRippleModule, ShowOnDirtyErrorStateMatcher} from '@angular/material/core';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatNativeDateModule } from '@angular/material/core';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule } from '@angular/material/button';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatAutocompleteModule } from '@angular/material/autocomplete';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {AceOverlayContainer} from './services/ace-overlay-container';\n\nexport function overlayFactory() {\n    return new AceOverlayContainer(document, null);\n}\n\n@NgModule({\n    imports: [\n        A11yModule,\n        BidiModule,\n        ScrollingModule ,\n        CdkStepperModule,\n        CdkTableModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        MatSlideToggleModule,\n        MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatChipsModule,\n        MatRadioModule,\n        MatNativeDateModule,\n        MatButtonToggleModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatTableModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatPaginatorModule,\n        MatTooltipModule,\n        MatGridListModule,\n        MatListModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRippleModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatStepperModule,\n        MatTabsModule,\n        FlexLayoutModule,\n        ObserversModule,\n        OverlayModule,\n        PlatformModule,\n        PortalModule,\n    ],\n    exports: [\n        A11yModule,\n        BidiModule,\n        ScrollingModule,\n        CdkStepperModule,\n        CdkTableModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        MatSlideToggleModule,\n        MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatChipsModule,\n        MatRadioModule,\n        MatNativeDateModule,\n        MatButtonToggleModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatTableModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatPaginatorModule,\n        MatTooltipModule,\n        MatGridListModule,\n        MatListModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRippleModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatStepperModule,\n        MatTabsModule,\n        FlexLayoutModule,\n        ObserversModule,\n        OverlayModule,\n        PlatformModule,\n        PortalModule,\n    ],\n    providers: [\n        { provide: OverlayContainer, useFactory: overlayFactory },\n        { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }\n    ]\n})\nexport class MaterialModule { }\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    exports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\n\nexport class AngularModule { }\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Observable } from 'rxjs';\nimport { Pipe, OnDestroy, PipeTransform } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Pipe({name: 'myObservable', pure: false})\nexport class ObservablePipe implements OnDestroy, PipeTransform {\n\n  private subject: BehaviorSubject<any> = new BehaviorSubject(null);\n  private observable: Observable<any> = this.subject.pipe(distinctUntilChanged());\n\n  public ngOnDestroy(): void {\n    this.subject.complete();\n  }\n\n  public transform(obj: any): any {\n    this.subject.next(obj);\n    return this.observable;  // newcode\n  }\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\n\n@Directive({\n    selector: '[regExValidationPattern]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: RegExValidatorDirective, multi: true }\n    ]\n})\nexport class RegExValidatorDirective implements Validator {\n    @Input('regExValidationPattern') public regExValidationPattern: string;\n    private pattern: RegExp;\n    private regexMap = { // add your own\n        '999': /^[0-9]{0,3}$/,\n        '9999': /^[0-9]{0,4}$/,\n        '999-': /^[0-9-]{0,7}$/,\n        'decimalTwo': /^\\d{0,6}\\.?\\d{0,2}$/,\n        '9999.999': /^\\d{0,7}\\.?\\d{0,3}$/,\n        'alpha25': /^[a-zA-Z0-9]{0,25}$/,\n        'number8Wild': /^[0-9*]{0,8}$/,\n        'alpha10Wild': /^[a-zA-Z0-9*]{0,10}$/,\n        'alpha9': /^[a-zA-Z0-9]{0,9}$/,\n        'time': /^[0-9]{0,2}$/,\n        'dateFormat_M/D/YYYY': /^\\d{0,2}\\/?\\d{0,2}\\/?\\d{0,4}$/,\n        'dateFormat_M-D-YYYY': /^\\d{0,2}\\-?\\d{0,2}\\-?\\d{0,4}$/,\n        'hours': /^[0-1]?[0-9]|2[0-3]$/,\n        'minutes': /^[0-5]?[0-9]$/,\n        '9comma': /^[0-9,]{0,10}$/\n    };\n\n    public validate(c: AbstractControl): ValidationErrors {\n        this.pattern = this.regexMap[this.regExValidationPattern];\n        const patternChange = c.value ? c.value.toString() : '';\n        if (!patternChange.match(this.pattern)) {\n            return {patternErrors: true, errorMsg: 'regex.pattern.error.' + this.regExValidationPattern };\n        }\n    }\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    Output,\n    OnChanges,\n    AfterViewInit,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    HostListener,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    FormControl,\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n// import { CustomFieldsAbstractClass } from '../custom-fields-abstract-class';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Placeholder } from '@angular/compiler/src/i18n/i18n_ast';\nimport { CdkPortal, TemplatePortalDirective } from '@angular/cdk/portal';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    CdkOverlayOrigin\n} from '@angular/cdk/overlay';\nimport { tap } from 'rxjs/operators';\n\nconst COMMA = 188;\nconst ENTER = 13;\n// tslint:disable:no-forward-ref\n@Component({\n    selector: 'dxc-chips',\n    templateUrl: 'dxc-chips.component.html',\n    styleUrls: ['dxc-chips.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DxcChipsComponent),\n            multi: true\n        }\n    ]\n})\nexport class DxcChipsComponent implements ControlValueAccessor, OnInit {\n    @Input() public forEdit: any; // to be removed\n    @Input() public placeholder: string;\n    @Input() public inputValidationFormat: string;\n    @Input()\n    public maxChipsAllow: number;\n    @Input()\n    public maxChipsShow: number;\n    @Input() public isValid: boolean = true;\n    @Input() public inputPattern: string | RegExp = '';\n\n    @Output() public forSave = new EventEmitter(); // to be removed\n\n    // @HostListener('document:keydown', ['$event'])\n    // onEscapePress(event: KeyboardEvent) {\n    //     if (event.keyCode === 27) {\n    //         this.closeAddCondition();\n    //     }\n    // }\n\n    // public visible: boolean = true;\n    public chipListCtrl: FormControl = new FormControl();\n    public selectable: boolean = true;\n    public removable: boolean = true;\n    public addOnBlur: boolean = true;\n    public isShowMoreVisible: boolean = false;\n    public startIndex: number = 0;\n\n    public separatorKeysCodes = [ENTER, COMMA];\n    public selectedChips = [];\n    public showChips = [];\n    public overlayRef: OverlayRef;\n    public isDisabled: boolean = false;\n\n    public isPasted: boolean = false;\n    public pasteText: string = '';\n\n    @ViewChild('addConditionOrigin') private addConditionOrigin: CdkOverlayOrigin;\n    @ViewChild('addConditionTemplate')\n    private addConditionTemplate: CdkPortal;\n    @ViewChild('chipparent', { read: ElementRef })\n    private chipParent: ElementRef;\n    @ViewChild('chipinput') private chipInput: ElementRef;\n\n    public constructor(public overlay: Overlay) { }\n\n    // tslint:disable:no-empty\n    public propagateChange: any = () => { };\n\n    public ngOnInit() {\n        this.ForEditControl(this.forEdit);\n        this.placeholder = this.placeholder || '';\n        this.inputValidationFormat = this.inputValidationFormat || '';\n        this.maxChipsAllow  = this.maxChipsAllow ? this.maxChipsAllow : 4;\n        this.maxChipsShow =  this.maxChipsAllow ? this.maxChipsAllow : 0;\n    }\n\n    public writeValue(obj): void {\n        this.selectedChips = [];\n        this.showChips = this.setShowChips(this.selectedChips);\n        if (this.chipInput) {\n            (this.chipInput.nativeElement as HTMLInputElement).value = '';\n        }      \n        // console.log((this.chipInput.nativeElement as MatInput).empty);\n        this.ForEditControl(obj);\n        this.placeholder = this.placeholder || '';\n        this.inputValidationFormat = this.inputValidationFormat || '';\n        // this.chipListCtrl.setValue('');\n        // this.chipListCtrl.reset();\n    }\n    public registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n    public registerOnTouched(fn: any): void { }\n\n    public setDisabledState?(isDisabled: boolean): void {\n        this.isDisabled = isDisabled;\n        if (isDisabled) {\n            this.chipListCtrl.disable();\n        } else {\n            this.chipListCtrl.enable();\n        }\n    }\n\n    public onPaste(event: ClipboardEvent) {\n        if (!this.isDisabled) {\n            const regexp = new RegExp(this.inputPattern);\n            const pastedItems = event.clipboardData\n                .getData('Text')\n                .split(/[.]|[,]|[\\s]|[\\r]|[\\n]/)\n                .filter((value) => value.trim() !== '');\n            let i = 0;\n            for (const item of pastedItems) {\n                if (this.selectedChips.filter((obj) => obj.value === item).length === 0) {\n                    this.selectedChips.push({\n                        value: item,\n                        valid: regexp.test(item)\n                    });\n                    i++;\n                }\n                if (this.selectedChips.length >= this.maxChipsAllow) {\n                    this.pasteText = i + ' of ' + pastedItems.length + ' items pasted. Max count reached';\n                    console.log(this.pasteText);\n                    break;\n                }\n            }\n            this.isPasted = true;\n            if (this.pasteText === '') {\n                this.pasteText = i + ' of ' + pastedItems.length + ' items pasted.';\n            }\n            setTimeout(() => {\n                this.isPasted = false;\n                this.pasteText = '';\n            }, 3000);\n            this.showChips = this.setShowChips(this.selectedChips);\n            this.returnData(this.selectedChips);\n        }\n        event.preventDefault();\n    }\n\n    public add(event: MatChipInputEvent): void {\n        const regexp = new RegExp(this.inputPattern);\n        const input = event.input;\n        const value = event.value;\n        if ((value || '').trim()) {\n            if (this.selectedChips.filter((s) => s.value === value).length <= 0) {\n                this.selectedChips.push({\n                    value: value.trim(),\n                    valid: regexp.test(value.trim())\n                });\n            }\n            // this.selectedChips.push(value.trim());\n            // console.log('selectedChips:' + this.selectedChips);\n            this.showChips = this.setShowChips(this.selectedChips);\n            // input.focus();\n            (this.chipInput.nativeElement as HTMLInputElement).focus();\n            // console.log(\"focus\");\n        }\n        if (input) {\n            input.value = '';\n        }\n        this.returnData(this.selectedChips);\n        this.forSave.emit(this.selectedChips);\n    }\n\n    public setShowChips(chips: any[]): any {\n        if (this.maxChipsShow === 0) {\n            return chips;\n        }\n        this.startIndex =\n            chips.length > this.maxChipsShow ? chips.length - this.maxChipsShow : 0;\n        this.isShowMoreVisible = this.startIndex > 0 ? true : false;\n        // console.log('startIndex:' + this.startIndex + '||endIndex:' + chips.length);\n        // console.log('selectedChips:' + this.selectedChips);\n        return chips.slice(this.startIndex);\n    }\n\n    public remove(chip: any, index: number, deleteType: string): void {\n        console.log(\"dxc chips remove call\");\n        // const index = this.selectedChips.indexOf(chip);\n        if (!this.isDisabled) {\n            if (deleteType === 'idel') {\n                index = this.startIndex + index;\n            }\n            if (index >= 0) {\n                this.selectedChips.splice(index, 1);\n                // console.log('selectedChips:' + this.selectedChips);\n\n                this.showChips = this.setShowChips(this.selectedChips);\n                if (deleteType === 'idel') {\n                    (this.chipInput.nativeElement as HTMLInputElement).focus();\n                }\n            }\n            if (this.selectedChips.length === 0) {\n                this.closeAllChips();\n            }\n            this.returnData(this.selectedChips);\n            this.forSave.emit(this.selectedChips);\n        }\n    }\n\n    public returnData(value) {\n        const output: string[] = [];\n        for (const item of value) {\n            output.push(item.value);\n        }\n        this.propagateChange(output);\n    }\n\n    public ForEditControl(value: any[]) {\n        const regexp = new RegExp(this.inputPattern);\n        if (\n            value &&\n            value !== null &&\n            value.length >= 1 &&\n            (this.selectedChips === undefined || this.selectedChips.length < 1)\n        ) {\n            for (const item of value) {\n                this.selectedChips.push({\n                    value: item.trim(),\n                    valid: regexp.test(item.trim())\n                });\n                if (this.selectedChips.length >= this.maxChipsAllow) {\n                    break;\n                }\n            }\n            // this.selectedChips = value.length > this.maxChipsAllow ?  value.slice(0, this.maxChipsAllow) : value;\n            this.showChips = this.setShowChips(this.selectedChips);\n        }\n    }\n\n    public showAllChips() {\n        // console.log(this.chipParent.nativeElement);\n        /*const strategy = this.overlay\n            .position()\n            .connectedTo(\n                this.addConditionOrigin.elementRef,\n                { originX: 'end', originY: 'bottom' },\n                { overlayX: 'end', overlayY: 'top' }\n            );*/\n\n        /*const strategy = this.overlay.position()\n        .flexibleConnectedTo(this.addConditionOrigin.elementRef)\n        .withPositions([{\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n        }, {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n        }]);*/\n\n        const strategy = this.overlay.position()\n        .flexibleConnectedTo(this.addConditionOrigin.elementRef)\n        .withPositions([{\n            originX: 'end',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n        }, {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'top',\n        }]);\n\n        const config = new OverlayConfig({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: strategy,\n            width: this.chipParent.nativeElement.getBoundingClientRect().width\n        });\n        this.overlayRef = this.overlay.create(config);\n        this.overlayRef.attach(this.addConditionTemplate);\n        this.overlayRef.backdropClick().subscribe(() => this.overlayRef.detach());\n        this.overlayRef.keydownEvents().subscribe((event: KeyboardEvent) => {\n            if (event.keyCode === 27) {\n                // this.overlayRef.detach();\n                this.closeAllChips();\n            }\n        });\n    }\n\n    public closeAllChips() {\n        if (this.overlayRef) {\n            this.overlayRef.detach();\n            (this.chipInput.nativeElement as HTMLInputElement).focus();\n        }\n    }\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<form class=\"dxc-chips\" >\n    <mat-form-field [class.mat-chip-form-field-invalid]=\"!isValid && !isDisabled\" [class.dxc-chips-disabled]=\"isDisabled\" fxFlex=\"100%\" [floatLabel]=\"'auto'\" #chipparent>\n        <mat-label>{{placeholder}}</mat-label>\n        <mat-chip-list #chipList>\n            <mat-chip *ngFor=\"let chip of showChips;let i = index\" class=\" mat-standard-chip mat-chip-selected\" [selectable]=\"selectable\" [color]=\"chip.valid ? 'normal':'warn'\" [removable]=\"removable\" (removed)=\"remove(chip,i,'idel')\">\n                {{chip.value}}\n                <mat-icon matChipRemove *ngIf=\"removable && !isDisabled\">cancel</mat-icon>              \n            </mat-chip>\n            \n            <input #chipinput matInput regExValidationPattern=\"{{inputValidationFormat}}\" [style.display]=\"selectedChips.length >= maxChipsAllow ? 'none' : 'block' \"\n                [matChipInputFor]=\"chipList\" [formControl]=\"chipListCtrl\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                [matChipInputAddOnBlur]=\"addOnBlur\" (matChipInputTokenEnd)=\"add($event)\" (paste)=\"onPaste($event)\" />\n        </mat-chip-list>\n\n        <button cdk-overlay-origin #addConditionOrigin=\"cdkOverlayOrigin\" [style.display]=\"isShowMoreVisible?'block':'none'\" matSuffix\n            mat-icon-button color=\"primary\" (click)=\"showAllChips()\">\n            <mat-icon aria-label=\"show all\">more_horiz</mat-icon>\n        </button>\n        \n        <ng-template cdk-portal #addConditionTemplate=\"cdkPortal\">\n            <div class=\"dxc-chips mat-elevation-z8 dxc-more-chips\">\n                <mat-chip-list>\n                    <mat-chip *ngFor=\"let chip of selectedChips;let i = index\" class=\" mat-standard-chip mat-chip-selected\" [color]=\"chip.valid ? 'normal':'warn'\" [selectable]=\"false\" [removable]=\"removable\" (removed)=\"remove(chip,i,'alldel')\">\n                        {{chip.value}}\n                        <mat-icon matChipRemove *ngIf=\"removable && !isDisabled\">cancel</mat-icon>\n                    </mat-chip>\n                </mat-chip-list>\n            </div>\n        </ng-template>\n        <mat-hint *ngIf=\"isPasted\">{{pasteText}}</mat-hint>\n        <mat-hint *ngIf=\"maxChipsAllow > 0\" align=\"end\">{{selectedChips.length}}/{{maxChipsAllow}}</mat-hint>\n        <div *ngIf=\"!isValid && !isPasted &&!isDisabled\" class=\"mat-form-field-subscript-wrapper \" >\n            <ng-content select=\"mat-error\"></ng-content>\n        </div>\n    </mat-form-field>\n</form>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport {\n  Component, EventEmitter, Output, Input, OnInit, AfterViewInit,\n  ViewEncapsulation, ElementRef, OnChanges, forwardRef, ViewChild, ChangeDetectionStrategy, DoCheck, Optional, Host, SkipSelf, OnDestroy, NgIterable\n} from '@angular/core';\nimport { FormControl, ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, ValidationErrors, NG_VALIDATORS, Validators, ControlContainer, FormGroupDirective } from '@angular/forms';\nimport {\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger\n} from '@angular/material/autocomplete';\nimport {\n  MatChipInputEvent\n} from '@angular/material/chips';\nimport { Observable, of, SubscriptionLike } from 'rxjs';\nimport { CdkOverlayOrigin, OverlayRef, Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n// tslint:disable:no-forward-ref\n// tslint:disable:no-empty\n@Component({\n  selector: 'dxc-chip-autocomplete',\n  templateUrl: 'dxc-chip-autocomplete.component.html',\n  styleUrls: ['dxc-chip-autocomplete.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DxcChipAutocompleteComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DxcChipAutocompleteComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class DxcChipAutocompleteComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges, DoCheck, ControlValueAccessor, Validator {\n\n  @Input() public placeholder: string;\n  @Input() public hint: string;\n\n  // chip-input form control\n  public autoCompleteChipList: FormControl = new FormControl('');\n\n  // mat-chip properties\n  public visible: boolean = true;\n  public selectable: boolean = true;\n  public removable: boolean = true;\n  public addOnBlur: boolean = true;\n  public isShowMoreVisible: boolean = false;\n  public disabled: boolean = false;\n  public filteredOptions: Observable<any[]>;\n  // public filteredOptions: NgIterable<any>; //newcode\n  public chips: any = [];\n  public showChips = [];\n  public isInvalid: boolean = false;\n  public isError: boolean = false;\n  public errorMessage = '';\n\n  public isPasted: boolean = false;\n  public pasteText: string = '';\n\n  private overlayRef: OverlayRef;\n  private dropdownValue: any = [];\n  private startIndex: number = 0;\n\n  private _dropdownList: any = [];\n  private _dropdownLimit: number = 0;\n  private _searchLimit: number = 0;\n  private _displayDropdownByDefault: boolean = false;\n  private _maxChipsAllow: number = 0;\n  private _maxChipsShow: number = 0;\n  private _replaceStop: string[] = ['***'];\n  private _required: boolean = false;\n  private _readonly: boolean = false;\n  private _searchBy: 'id' | 'value' | 'all' = 'all';\n\n  private ddlSubscription: SubscriptionLike;\n  private controlSubscription: SubscriptionLike;\n  @Input()\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  @Input()\n  set readonly(value: boolean) {\n    this._readonly = coerceBooleanProperty(value);\n  }\n  get readonly(): boolean {\n    return this._readonly;\n  }\n\n  @Input('dropdownList')\n  set dropdownList(obs: Observable<any>) {\n    if (obs) { //newcode\n      this.ddlSubscription = obs.subscribe((list) => {\n        this._dropdownList = list;\n        this.dropdownValue = this._dropdownList;\n        const selectedChips = [];\n        for (const chip of this.chips) {\n          selectedChips.push(chip.id);\n        }\n        this.writeValue(selectedChips);\n      });\n    }\n   \n  }\n\n  @Input('dropdownLimit')\n  set dropdownLimit(value: number) {\n    this._dropdownLimit = value;\n  }\n  get dropdownLimit(): number {\n    return this._dropdownLimit;\n  }\n\n  @Input('searchLimit')\n  set searchLimit(value: number) {\n    this._searchLimit = value;\n  }\n  get searchLimit(): number {\n    return this._searchLimit;\n  }\n\n  @Input()\n  set displayDropdownByDefault(value: boolean) {\n    this._displayDropdownByDefault = coerceBooleanProperty(value);\n  }\n  get displayDropdownByDefault(): boolean {\n    return this._displayDropdownByDefault;\n  }\n\n  @Input('maxChipsAllow')\n  set maxChipsAllow(value: number) {\n    this._maxChipsAllow = value;\n    if (value !== 0 && this._maxChipsShow > value) {\n      throw new Error('maxChipsShow should be lesser than or equal to maxChipsAllow');\n    }\n  }\n  get maxChipsAllow(): number {\n    return this._maxChipsAllow;\n  }\n\n  @Input('maxChipsShow')\n  set maxChipsShow(value: number) {\n    this._maxChipsShow = value;\n    if (this._maxChipsAllow !== 0 && value > this._maxChipsAllow) {\n      throw new Error('maxChipsShow should be lesser than or equal to maxChipsAllow');\n    }\n  }\n  get maxChipsShow(): number {\n    return this._maxChipsShow;\n  }\n\n  @Input('replaceStop')\n  set replaceStop(value: string | string[]) {\n    if (typeof value === 'string') {\n      this._replaceStop = [value];\n    } else {\n      this._replaceStop = value;\n    }\n  }\n\n  @Input('searchBy')\n  set searchBy(value: 'id' | 'value' | 'all') {\n    this._searchBy = value;\n  }\n  get searchBy(): 'id' | 'value' | 'all' {\n    return this._searchBy;\n  }\n\n  @ViewChild('addConditionOrigin') private addConditionOrigin: CdkOverlayOrigin;\n  @ViewChild('addConditionTemplate') private addConditionTemplate: CdkPortal;\n  @ViewChild('chipparent', { read: ElementRef }) private chipParent: ElementRef;\n  @ViewChild('chipInput') private chipInput: ElementRef;\n\n  public constructor(\n    private elRef: ElementRef,\n    public overlay: Overlay,\n    @Optional() public _parentFormGroup: FormGroupDirective\n  ) { }\n\n  public propagateChange: any = () => {\n  }\n\n  public ngOnInit() {\n    this.showDropdropdown(); // newcode\n    this.controlSubscription = this.autoCompleteChipList.valueChanges.pipe(debounceTime(300)).subscribe(\n      (val) => {\n        if (val) {\n          this.updateDropdown(val);\n        }\n      }\n    );\n  }\n\n  public ngOnChanges() {\n    this.returnData(this.chips);\n  }\n\n  public ngDoCheck(): void {\n    this.returnData(this.chips);\n  }\n\n  public ngOnDestroy(): void {\n    this._dropdownList = [];\n    this.dropdownValue = [];\n    if ( this.ddlSubscription) {\n      this.ddlSubscription.unsubscribe();\n    }\n    if (this.controlSubscription) {\n      this.controlSubscription.unsubscribe();\n    }   \n  }\n\n  public registerOnValidatorChange?(fn: () => void): void {\n  }\n\n  public validate(c: FormControl): ValidationErrors {\n    const errors = [];\n    if (this.isInvalid) {\n      return ({ parseError: true });\n    }\n    return null;\n  }\n\n  public writeValue(obj): void {\n    this.chips = [];\n    this.showChips = this.setShowChips(this.chips);\n    if (this.chipInput) { // newcode\n      (this.chipInput.nativeElement as HTMLInputElement).value = '';\n    }\n  \n    this.autoCompleteChipList.reset();\n    this.dropdownValue = this._dropdownList;\n    this.updateDropdown('');\n    this.toggleInput('');\n    this.ForEditControl(obj);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    if (isDisabled) {\n      this.autoCompleteChipList.disable();\n      console.log('disabled');\n    } else {\n      this.autoCompleteChipList.enable();\n      console.log('enabled');\n    }\n  }\n\n  public clearOnBlur() {\n    // let chipValue = [];\n    // if (this.autoCompleteChipList.value && (typeof this.autoCompleteChipList.value) === 'string' ) {\n    //   // console.log(this.autoCompleteChipList.value);\n    //   chipValue = this.dropdownValue.filter(\n    //     (obj) => obj.id.toLowerCase() === this.autoCompleteChipList.value.trim().toLowerCase()\n    //   );\n    // }\n    // if (chipValue.length > 0) {\n    //   const selection = chipValue[0];\n    //   if (selection.id === this._replaceStop) {\n    //     this.chips = [];\n    //   }\n    //   if (this.chips.filter((obj) => obj.id === selection.id).length === 0) {\n    //     this.chips.push(selection);\n    //   }\n    //   this.showChips = this.setShowChips(this.chips);\n    //   this.dropdownValue = this.dropdownValue.filter((obj) => obj.id !== selection.id);\n    //   this.returnData(this.chips);\n    //   if (this.displayDropdownByDefault === true) {\n    //     this.filteredOptions = this.dropdownValue.slice(0, 10);\n    //   }\n    //   this.toggleInput(selection.id);\n    //   // this.updateDropdown('');\n    //   (this.chipInput.nativeElement as HTMLInputElement).focus();\n    // }\n    (this.chipInput.nativeElement as HTMLInputElement).value = '';\n    this.validateAllChips();\n    // this.autoCompleteChipList.reset();\n  }\n\n  public onPaste(event: ClipboardEvent) {\n    if (!this.disabled && !this.readonly) {\n    const pastedItems = event.clipboardData.getData('Text').split(/[.]|[,]|[\\s]|[\\r]|[\\n]/).filter((value) => value.trim() !== '');\n    let i = 0;\n    for (const item of pastedItems) {\n      let chipValue = [];\n      chipValue = this.dropdownValue.filter(\n        (obj) => obj.id.toLowerCase() === item.trim().toLowerCase()\n      );\n      if (chipValue.length > 0) {\n        const selection = chipValue[0];\n        if (this._replaceStop.filter((m) => m === selection.id).length > 0) {\n          this.chips = [];\n          this.dropdownValue = this._dropdownList;\n        }\n        if (this.chips.filter((obj) => obj.id === selection.id).length === 0) {\n          this.chips.push(selection);\n          i++;\n        }\n        // this.dropdownValue = this.dropdownValue.filter((obj) => obj.id !== selection.id);\n        if (!this.toggleInput(selection.id)) {\n          this.pasteText = i + ' of ' + pastedItems.length + ' items pasted. Max count reached';\n          break;\n        }\n      } else {\n        if (this.chips.filter((obj) => obj.id.toLowerCase() === item.trim().toLowerCase()).length <= 0) {\n          const selection = {\n            id: item.trim(),\n            displayText: '',\n            value: item.trim(),\n            isUnavaliable: true\n          };\n          i++;\n          this.chips.push(selection);\n          if (!this.toggleInput(item)) {\n            this.pasteText = i + ' of ' + pastedItems.length + ' items pasted. Max count reached';\n            break;\n          }\n        }\n      }\n    }\n    // console.log(this.chips);\n    if (this.pasteText === '') {\n      this.pasteText = i + ' of ' + pastedItems.length + ' items pasted.';\n    }\n    this.isPasted = true;\n    setTimeout(() => {\n      this.isPasted = false;\n      this.pasteText = '';\n    }, 3000);\n    this.showChips = this.setShowChips(this.chips);\n    this.returnData(this.chips);\n    this.showDropdropdown();\n  }\n    event.preventDefault();\n  }\n\n  public ngAfterViewInit() {\n  }\n\n  public updateDropdown(str: string) {\n    const strLength = str.length;\n    const searchLimit = this.searchLimit ? this.searchLimit : 1;\n    const dropLimit = this.dropdownLimit ? this.dropdownLimit : 10;\n    const selectedChipLength = this.chips.length;\n\n    if (this._maxChipsAllow !== 0 && this._maxChipsAllow <= selectedChipLength) {\n      this.filteredOptions = this.dropdownValue.slice(0, 0);\n    } else if (strLength >= searchLimit) {\n      let tempFilter: any;\n      switch (this._searchBy) {\n        case 'id':\n          tempFilter = this.dropdownValue.filter((e) => e.id.toLowerCase().indexOf(str.toString().toLowerCase()) === 0)\n            .filter((e) => this.chips.filter((s) => s.id === e.id).length <= 0);\n          break;\n        case 'value':\n          tempFilter = this.dropdownValue.filter((e) => e.value.toLowerCase().indexOf(str.toString().toLowerCase()) !== -1)\n            .filter((e) => this.chips.filter((s) => s.id === e.id).length <= 0);\n          break;\n        default:\n          tempFilter = this.dropdownValue\n            .filter(\n              (e) => {\n                return (e.id.toLowerCase().indexOf(str.toString().toLowerCase()) === 0) ||\n                  (e.value.toLowerCase().indexOf(str.toString().toLowerCase()) !== -1);\n              }\n            ).filter((e) => this.chips.filter((s) => s.id === e.id).length <= 0);\n      }\n      this.filteredOptions = tempFilter.sort(\n        (a, b) => {\n          return (a.id.toLowerCase().indexOf(str.toLowerCase()) === 0) ? -1 :\n            (b.id.toLowerCase().indexOf(str.toLowerCase()) === 0) ? 1 : 0;\n        }\n      )\n        .slice(0, dropLimit);\n    } else if (this._displayDropdownByDefault === true && strLength === 0) {\n      this.filteredOptions = this.dropdownValue.slice(0, dropLimit);\n    } else {\n      this.filteredOptions = this.dropdownValue.slice(0, 0);\n    }\n  }\n\n  public toggleInput(val: string): boolean {\n    if (this._replaceStop.filter((m) => m === val).length > 0 || (this._maxChipsAllow !== 0 && this.chips.length >= this._maxChipsAllow)) {\n      this._readonly = true;\n      return false;\n    } else {\n      this.readonly = false;\n      return true;\n    }\n  }\n\n  public addChip(event: MatAutocompleteSelectedEvent, input: any): void {\n    const selection = event.option.value;\n    if (this._replaceStop.filter((m) => m === selection.id).length > 0) {\n      this.chips = [];\n    }\n    if (this.chips.filter((obj) => obj.id === selection.id).length === 0) {\n      this.chips.push(selection);\n    }\n    this.showChips = this.setShowChips(this.chips);\n    // (this.chipInput.nativeElement as HTMLInputElement).focus();\n    // this.autoCompleteChipList.markAsPristine();\n    // this.dropdownValue = this.dropdownValue.filter((obj) => obj.id !== selection.id);\n    if (input) {\n      input.value = '';\n    }\n    this.returnData(this.chips);\n    this.showDropdropdown();\n    this.toggleInput(selection.id);\n  }\n\n  public setShowChips(chips: any[]): any {\n    if (this._maxChipsShow === 0) {\n      return chips;\n    }\n    this.startIndex = (chips.length > this._maxChipsShow) ?\n      (chips.length - this._maxChipsShow) : 0;\n    this.isShowMoreVisible = this.startIndex > 0 ? true : false;\n    return chips.slice(this.startIndex);\n  }\n \n  public removeChip(chip: any,  deleteType: string): void {\n    console.log(\"dxc auto remove call\");\n    const index = this.chips.indexOf(chip);\n    if (!this.disabled) {\n      if (index >= 0) {\n        this.chips.splice(index, 1);\n        // if (!chip.isUnavaliable) {\n        //   this.dropdownValue.push(chip);\n        // }\n        this.showChips = this.setShowChips(this.chips);\n        (this.chipInput.nativeElement as HTMLInputElement).focus();\n      }\n      this.returnData(this.chips);\n      this.showDropdropdown();\n      if (this.chips.length === 0) {\n        this.closeAllChips();\n      }\n      this.toggleInput('');\n    }\n  }\n\n  public returnData(value) {\n    const selectedChips = [];\n    for (const chip of value) {\n      selectedChips.push(chip.id);\n    }\n    this.validateAllChips();\n    this.propagateChange(selectedChips);\n  }\n\n  public ForEditControl(value) {\n    if ((value && value !== null && value.length >= 1) &&\n      (this.chips === undefined || this.chips.length < 1)) {\n      for (const item of value) {\n        if (this.dropdownValue.filter((obj) => obj.id === item).length > 0) {\n          const valChip = this.dropdownValue.filter((obj) => obj.id === item);\n          this.chips.push(valChip[0]);\n          // this.dropdownValue = this.dropdownValue.filter((obj) => obj.id !== item);\n          this.toggleInput(item);\n        } else {\n          const valChip = {\n            id: item,\n            displayText: '',\n            value: item,\n            isUnavaliable: true\n          };\n          this.chips.push(valChip);\n          this.toggleInput(item);\n          // console.warn(item + ' missing in suggestion dropdown. Cannot be retrived if deleted');\n        }\n      }\n      this.showChips = this.setShowChips(this.chips);\n    }\n    // this.returnData(this.chips);\n  }\n\n  public validateAllChips() {\n    this.autoCompleteChipList.setErrors(null);\n    if (!this.disabled) {\n      if (this._required && this.chips.length === 0) {\n        this.isError = true;\n        this.autoCompleteChipList.setErrors({ required: true });\n        this.errorMessage = 'Required';\n      } else {\n        this.isError = false;\n      }\n      if (this.chips.filter((obj) => obj.isUnavaliable).length > 0) {\n        this.isInvalid = true;\n        this.autoCompleteChipList.setErrors({ invalid: true });\n        this.errorMessage = 'Invalid Item(s)';\n      } else {\n        this.isInvalid = false;\n      }\n    } else {\n      this.autoCompleteChipList.disable();\n    }\n  }\n\n  public showAllChips() {\n   /* const strategy = this.overlay.position()\n      .connectedTo(\n        this.addConditionOrigin.elementRef,\n        { originX: 'end', originY: 'bottom' },\n        { overlayX: 'end', overlayY: 'top' });*/\n\n      const strategy = this.overlay.position()\n      .flexibleConnectedTo(this.addConditionOrigin.elementRef)\n      .withPositions([{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n      }]);\n\n     /* const strategy = this.overlay.position()\n        .flexibleConnectedTo(this.addConditionOrigin.elementRef)\n        .withPositions([{\n            originX: 'end',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n        }, {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'top',\n        }]); */\n\n    const config = new OverlayConfig({\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      positionStrategy: strategy,\n      width: this.chipParent.nativeElement.getBoundingClientRect().width\n    });\n    this.overlayRef = this.overlay.create(config);\n    this.overlayRef.attach(this.addConditionTemplate);\n    this.overlayRef.backdropClick().subscribe(() => this.overlayRef.detach());\n    this.overlayRef.keydownEvents().subscribe((event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        // this.overlayRef.detach();\n        this.closeAllChips();\n      }\n    });\n  }\n\n  public closeAllChips() {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n      (this.chipInput.nativeElement as HTMLInputElement).focus();\n    }\n  }\n\n  public showDropdropdown() {\n    if (this._displayDropdownByDefault && this._displayDropdownByDefault === true) {\n      const dropLimit = this.dropdownLimit ? this.dropdownLimit : 10;\n      this.filteredOptions = this.dropdownValue.slice(0, this._dropdownLimit);\n      // (this.chipInput.nativeElement as HTMLInputElement).focus();\n    }\n  }\n}\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<form class=\"dxc-chip-autocomplete\">\n\t<mat-form-field #chipparent [class.mat-chip-form-field-invalid]=\"!!(autoCompleteChipList && autoCompleteChipList.invalid && (autoCompleteChipList.touched || (_parentFormGroup && _parentFormGroup.submitted)))\">\n\t\t<mat-label>{{placeholder}}</mat-label>\n\t\t<mat-chip-list #chipList class=\"dxc-chips\" >\n\t\t\t<mat-chip class=\" mat-standard-chip mat-chip-selected\" selected=\"true\" *ngFor=\"let chip of showChips\" [selectable]=\"selectable\" [color]=\"chip.isUnavaliable ? 'warn':'normal'\" [removable]=\"removable\" (removed)=\"removeChip(chip)\">\n\t\t\t\t{{chip.displayText || chip.id}} \n\t\t\t\t<mat-icon matChipRemove *ngIf=\"removable && !disabled\">cancel</mat-icon>\t\t\t\t\n\t\t\t</mat-chip>\n\t\t\t<input matInput [readonly]=\"readonly\" #chipInput class=\"autoInput\" \n\t\t\t\t[matChipInputFor]=\"chipList\"\n\t\t\t\t[matAutocomplete]=\"auto\" \n\t\t\t\t[matChipInputAddOnBlur]=\"addOnBlur\" \n\t\t\t\t[formControl]=\"autoCompleteChipList\" \n\t\t\t\t(blur)=\"clearOnBlur()\" (focus)=\"updateDropdown('')\" (paste)=\"onPaste($event)\"/>\n\t\t</mat-chip-list>\n\t\t<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addChip($event, chipInput)\">\n\t\t\t<mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option\">\n\t\t\t\t<span>{{option.value}}</span>\n\t\t\t</mat-option>\n\t\t</mat-autocomplete>\n\t\t<button cdk-overlay-origin #addConditionOrigin=\"cdkOverlayOrigin\" [style.display]=\"isShowMoreVisible?'block':'none'\" matSuffix\n\t\t    mat-icon-button color=\"primary\" (click)=\"showAllChips()\">\n\t\t\t<mat-icon aria-label=\"show all\">more_horiz</mat-icon>\n\t\t</button>\n\n\t\t<ng-template cdk-portal #addConditionTemplate=\"cdkPortal\">\n\t\t\t<div class=\"dxc-chip-autocomplete mat-elevation-z8 dxc-more-chips\">\n\t\t\t\t<mat-chip-list #chipList>\n\t\t\t\t\t<mat-chip class=\" mat-standard-chip mat-chip-selected\" selected=\"true\" *ngFor=\"let chip of chips;let i = index\" [selectable]=\"false\" [color]=\"chip.isUnavaliable ? 'warn':'normal'\" [removable]=\"removable\" (removed)=\"removeChip(chip)\">\n\t\t\t\t\t\t{{chip.displayText || chip.id}}\n\t\t\t\t\t\t<mat-icon matChipRemove *ngIf=\"removable && !disabled\">cancel</mat-icon>\n\t\t\t\t\t</mat-chip>\n\t\t\t\t</mat-chip-list>\n\t\t\t</div>\n\t\t</ng-template>\n\t\t<mat-hint *ngIf=\"maxChipsAllow > 0\" align=\"end\">{{chips.length}}/{{maxChipsAllow}}</mat-hint>\n\t\t<mat-hint *ngIf=\"isPasted\">{{pasteText}}</mat-hint>\n\t\t<mat-hint *ngIf=\"hint && !isInvalid && !isError && !isPasted\">{{hint}}</mat-hint>\n\t\t<!-- <mat-hint *ngIf=\"tempHint && !isInvalid\" align=\"start\" class=\"errorhighlight\">{{errorMessage}}</mat-hint> -->\n\t\t<mat-hint class=\"mat-error\" *ngIf=\"!isPasted && !!(autoCompleteChipList && autoCompleteChipList.invalid && (autoCompleteChipList.touched || (_parentFormGroup && _parentFormGroup.submitted)))\">{{errorMessage}}</mat-hint>\n\t\t<!-- <mat-hint class=\"mat-error\" *ngIf=\"autoCompleteChipList.hasError('invalid')\">Invalid chip(s)</mat-hint> -->\n\t</mat-form-field>\n\t\n</form>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Component, ViewEncapsulation, forwardRef } from '@angular/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n\n@Component({\n    selector: 'dxc-chip-error',\n    templateUrl: 'dxc-chip-error.component.html',\n    encapsulation: ViewEncapsulation.None,\n  })\n\n  export class DxcChipErrorComponent {\n  }\n","<!--\n    Unpublished work © 2019 DXC Technology Company.\n    All rights reserved.\n    Use, duplication, and/or alteration is subject to license terms.\n-->\n\n<ng-container>\n    <mat-hint class=\"mat-error\">\n        <ng-content></ng-content>\n    </mat-hint>\n</ng-container>","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: '[validationFormat]'\n})\nexport class ValidationFormatterDirective {\n    @Input('validationFormat') public validationFormat: string;\n    private pattern: RegExp;\n\n    /*\n    private regexMap = { // add your own\n        '999': /^([0-9]){0,3}$/g,\n        '9999': /^([0-9]){0,4}$/g,\n        '999-': /^([0-9-]){0,7}$/g,\n        'decimalTwo': /^\\d{0,6}\\.?\\d{0,2}$/g,\n        '9999.999': /^\\d{0,7}\\.?\\d{0,3}$/g,\n        'alpha25': /^([a-zA-Z0-9]){0,25}$/g,\n        'number8Wild': /^([0-9*]){0,8}$/g,\n        'alpha10Wild': /^([a-zA-Z0-9*]){0,10}$/g,\n        'alpha9': /^([a-zA-Z0-9]){0,9}$/g,\n        'time': /^([0-9]){0,2}$/g,\n        'dateFormat': /^\\d{0,2}\\/?\\d{0,2}\\/?\\d{0,4}$/g,\n        'timeHour': /^([0-1]?[0-9]|2[0-3])$/g,\n        'timeMin': /^([0-5]?[0-9])$/g,\n        \"9comma\": /^([0-9,]){0,10}$/g\n    };\n    */\n    private regexMap = { // add your own\n        '999': /^[0-9]{0,3}$/,\n        '9999': /^[0-9]{0,4}$/,\n        '999-': /^[0-9-]{0,7}$/,\n        'decimalTwo': /^\\d{0,6}\\.?\\d{0,2}$/,\n        '9999.999': /^\\d{0,7}\\.?\\d{0,3}$/,\n        'alpha25': /^[a-zA-Z0-9]{0,25}$/,\n        'number8Wild': /^[0-9*]{0,8}$/,\n        'alpha10Wild': /^[a-zA-Z0-9*]{0,10}$/,\n        'alpha9': /^[a-zA-Z0-9]{0,9}$/,\n        'time': /^[0-9]{0,2}$/,\n        'dateFormat_M/D/YYYY': /^\\d{0,2}\\/?\\d{0,2}\\/?\\d{0,4}$/,\n        'dateFormat_M-D-YYYY': /^\\d{0,2}\\-?\\d{0,2}\\-?\\d{0,4}$/,\n        'timeHour': /^[0-1]?[0-9]|2[0-3]$/,\n        'timeMin': /^[0-5]?[0-9]$/,\n        '9comma': /^[0-9,]{0,10}$/\n    };\n    // Allow key codes for special events. Reflect :\n    // Backspace, tab, end, home\n    private specialKeys: string[] = ['Backspace', 'Tab', 'End', 'Home'];\n\n    constructor(private el: ElementRef) {\n    }\n    @HostListener('keypress', ['$event'])\n    public nInput(event: KeyboardEvent) {\n        // Allow Backspace, tab, end, and home keys\n        if (this.specialKeys.indexOf(event.key) !== -1) {\n            return;\n        }\n        this.pattern = this.regexMap[this.validationFormat];\n        const current: string = this.el.nativeElement.value;\n        const next: string = current.concat(event.key);\n        if (next && !String(next).match(this.pattern)) {\n            event.preventDefault();\n        }\n    }\n}\n","/*\n * Unpublished work © 2019 DXC Technology Company.\n * All rights reserved.\n * Use, duplication, and/or alteration is subject to license terms.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { MessageService } from './services/message.service';\nimport { DialogsService } from './services/dialog.service';\nimport { MaterialModule } from './material.module';\nimport { AngularModule } from './angular.module';\n\nimport { DxcHeaderComponent } from './components/dxc-header/dxc-header.component';\nimport {\n  DxcAppLayoutComponent,\n  DxcAppContentComponent,\n  DxcAppLeftContentComponent,\n  DxcAppRightContentComponent,\n  DxcAppCenterContentComponent,\n  DxcAppTopContentComponent,\n  DxcFixedTopContentComponent\n} from './components/dxc-app-layout/dxc-app-layout.component';\nimport {\n  DxcSessionComponent,\n  DxcSessionControlsComponent,\n  DxcSessionContentComponent\n} from './components/dxc-session/dxc-session.component';\nimport { DxcNavigationComponent } from './components/dxc-navigation/dxc-navigation.component';\nimport { DxcClassSelectorComponent } from './components/dxc-class-selector/dxc-class-selector.component';\nimport { DxcAlertMessageComponent } from './components/dxc-alert-message/dxc-alert-message.component';\nimport { DxcChipsComponent } from './components/custom-fields/dxc-chips/dxc-chips.component';\nimport { DxcChipAutocompleteComponent } from './components/custom-fields/dxc-chip-autocomplete/dxc-chip-autocomplete.component';\nimport { DxcChipErrorComponent } from './components/custom-fields/dxc-chip-autocomplete/dxc-chip-error.component';\nimport { DxcConfirmDialogComponent } from './components/dxc-confirm-dialog/dxc-confirm-dialog.component';\nimport { DxcTabNavBarComponent } from './components/dxc-tab-nav-bar/dxc-tab-nav-bar.component';\nimport { ValidationFormatterDirective } from './directives/validation-formatter.directive';\nimport { RegExValidatorDirective } from './directives/regex-validator-directive';\n\n// import 'styles.scss'\nimport { ObservablePipe } from './components/observable.pipe';\n// import { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n@NgModule({\n  imports: [AngularModule, MaterialModule],\n  declarations: [\n    DxcAlertMessageComponent,\n    DxcAppLayoutComponent,\n    DxcAppContentComponent,\n    DxcAppLeftContentComponent,\n    DxcAppRightContentComponent,\n    DxcAppCenterContentComponent,\n    DxcFixedTopContentComponent,\n    DxcAppTopContentComponent,\n    DxcHeaderComponent,\n    DxcSessionComponent,\n    DxcSessionControlsComponent,\n    DxcSessionContentComponent,\n    DxcNavigationComponent,\n    DxcClassSelectorComponent,\n    DxcChipsComponent,\n    DxcChipAutocompleteComponent,\n    DxcChipErrorComponent,\n    DxcTabNavBarComponent,\n    DxcConfirmDialogComponent,\n    ValidationFormatterDirective,\n    RegExValidatorDirective,\n    ObservablePipe\n  ],\n  exports: [\n    AngularModule,\n    MaterialModule,\n    DxcAlertMessageComponent,\n    DxcAppLayoutComponent,\n    DxcAppLeftContentComponent,\n    DxcAppRightContentComponent,\n    DxcAppCenterContentComponent,\n    DxcFixedTopContentComponent,\n    DxcAppTopContentComponent,\n    DxcAppContentComponent,\n    DxcHeaderComponent,\n    DxcSessionComponent,\n    DxcSessionControlsComponent,\n    DxcSessionContentComponent,\n    DxcNavigationComponent,\n    DxcClassSelectorComponent,\n    DxcChipsComponent,\n    DxcChipAutocompleteComponent,\n    DxcChipErrorComponent,\n    DxcTabNavBarComponent,\n    DxcConfirmDialogComponent,\n    ValidationFormatterDirective,\n    RegExValidatorDirective,\n    ObservablePipe\n  ],\n  providers: [],\n  entryComponents: [DxcConfirmDialogComponent]\n  //schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DxcCoreModule {}\n","/*\n * Public API Surface of core-lib\n */\n\nexport * from './models/dxc-nav-item.interface';\nexport * from './services/user';\nexport * from './services/message';\nexport * from './services/message.service';\nexport * from './services/dialog.service';\nexport * from './services/ace-overlay-container';\nexport * from './components/dxc-alert-message/dxc-alert-message.component';\nexport * from './components/dxc-confirm-dialog/dxc-confirm-dialog.component';\nexport * from './components/dxc-app-layout/dxc-app-layout.component';\nexport * from './components/dxc-header/dxc-header.component';\nexport * from './components/dxc-session/dxc-session.component';\nexport * from './components/dxc-navigation/dxc-navigation.component';\nexport * from './components/dxc-class-selector/dxc-class-selector.component';\nexport * from './components/dxc-tab-nav-bar/dxc-tab-nav-bar.component';\nexport * from './material.module';\nexport * from './angular.module';\nexport * from './components/observable.pipe';\nexport * from './components/custom-fields/dxc-chips/dxc-chips.component';\nexport * from './components/custom-fields/dxc-chip-autocomplete/dxc-chip-autocomplete.component';\nexport * from './components/custom-fields/dxc-chip-autocomplete/dxc-chip-error.component';\nexport * from './directives/validation-formatter.directive';\nexport * from './directives/regex-validator-directive';\n\nexport * from './dxc-core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i1.MessageService","i5","i1.DxcAlertMessageComponent","i3","i4","i6","i8","i10.RegExValidatorDirective","i7","i9","i10"],"mappings":"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"}